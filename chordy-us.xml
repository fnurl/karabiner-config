<?xml version="1.0"?>
<root>
  
  <item>
    <name>chordy-us.xml: Chordy</name>

    <item>
      <name>Non-symmetric chords for single keys</name>
      <appendix>Non-symmetric chords are two finger chords that are</appendix>
      <appendix>mapped to a single keypress. They are not modifier</appendix>
      <appendix>mappings, nor overloaded mappings.</appendix>
      <appendix>The motivation for having non-symmetrical chords is that they can be performed one-handed</appendix>

      <item>
        <name>Return UI</name>
        <identifier>chordy.single_key.return_ui</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::U, KeyCode::I, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Return IO</name>
        <identifier>chordy.single_key.return_io</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::I, KeyCode::O, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Return KL</name>
        <identifier>chordy.single_key.return_kl</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Return DOT COMMA</name>
        <identifier>chordy.single_key.backspace_dotcomma</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::COMMA, KeyCode::DOT, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Delete (Backspace) ER</name>
        <identifier>chordy.single_key.delete_er</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::E, KeyCode::R, KeyCode::DELETE
        </autogen>
      </item>

      <item>
        <name>Delete (Backspace) SD</name>
        <identifier>chordy.single_key.delete_sd</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::S, KeyCode::D, KeyCode::DELETE
        </autogen>
      </item>

      <item>
        <name>Delete (Backspace) IO</name>
        <identifier>chordy.single_key.backspace_io</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::I, KeyCode::O, KeyCode::DELETE
        </autogen>
      </item>
      
      <item>
        <name>Backquote: EF</name>
        <identifier>chordy.single_key.backquote</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::E, KeyCode::F, KeyCode::BACKQUOTE 
        </autogen>
      </item>

      <item>
        <name>Tilde: JI</name>
        <identifier>chordy.single_key.tilde</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::I, KeyCode::J, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L 
        </autogen>
      </item>

      <item>
        <name>TAB: WE</name>
        <identifier>chordy.tab_we</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::W, KeyCode::E, KeyCode::TAB  
        </autogen>
      </item>

    </item>

    <item>
      <name>Symmetric Chords for single keys</name>
      <appendix>Single key chords are symmetric, two hand, two finger chords.</appendix>
      <appendix>Every chord uses two fingers, one from each hand.</appendix>
      <appendix>The fingers are used symmetrically, e.g. left index finger with right index finger</appendix>
      <appendix>What is good about symmetric chords is that they promote returning your fingers to the homerow.</appendix>
      <appendix>One con I have discovered is that it is easier to sync two fingers on the same hand (non-symmetric chords) than two fingers on two different hands (symmetric chords)</appendix>
      
      <item>
        <name>Escape</name>
        <appendix>Escape: GH</appendix>
        <identifier>chordy.single_key.escape</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::G, KeyCode::H, KeyCode::ESCAPE
        </autogen>
      </item>
      
      <item>
        <name>Return GH</name>
        <identifier>chordy.single_key.return_gh</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::G, KeyCode::H, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Return FJ</name>
        <identifier>chordy.single_key.return_fj</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::RETURN
        </autogen>
      </item>
      
      <item>
        <name>Delete (Backspace) FJ</name>
        <identifier>chordy.single_key.delete_fj</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::DELETE
        </autogen>
      </item>

      <item>
        <name>Delete (Backspace) DK</name>
        <identifier>chordy.single_key.delete_dk</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::D, KeyCode::K, KeyCode::DELETE
        </autogen>
      </item>

      <item>
        <name>Colon DK</name>
        <identifier>chordy.single_key.colon_dk</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::D, KeyCode::K, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L 
        </autogen>
      </item>

      <item>
        <name>Colon SL</name>
        <identifier>chordy.single_key.colon_sl</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::S, KeyCode::L, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L 
        </autogen>
      </item>

      <item>
        <name>Semicolon: A; (actually AÖ when using ÅÄÖ)</name>
        <identifier>chordy.single_key.semicolon_asemi</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::A, KeyCode::SEMICOLON, KeyCode::SEMICOLON 
        </autogen>
      </item>

      <item>
        <name>Semicolon: SL</name>
        <identifier>chordy.single_key.semicolon_sl</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::S, KeyCode::L, KeyCode::SEMICOLON 
        </autogen>
      </item>

      <item>
        <name>Quotes</name>
        <appendix>Combos for single and double quotes. VN for single. CM for double.</appendix>
        <identifier>chordy.single_key.quotes</identifier>
        <autogen>
          __SimultaneousKeyPresses__ KeyCode::V, KeyCode::N, KeyCode::QUOTE 
        </autogen>

        <autogen>
          __SimultaneousKeyPresses__ KeyCode::C, KeyCode::M, KeyCode::QUOTE, ModifierFlag::SHIFT_L 
        </autogen>
      </item>

      <item>
        <name>Dashes</name>
        <appendix>Combos for dashes. RU for dash, EI for underscore</appendix>
        <identifier>chordy.single_key.dashes</identifier>
        <autogen> __SimultaneousKeyPresses__ KeyCode::R, KeyCode::U, KeyCode::MINUS</autogen>
        <autogen> __SimultaneousKeyPresses__ KeyCode::E, KeyCode::I, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>
      </item>
      
    </item>


    <item>
      <name>Mirrored, two-finger, modfifier chords</name>
      <appendix>Modifier chords are mirrored, one hand, two finger chords (every chord has a twin for each hand)</appendix>

      <item>
        <name>Control: DF and JK</name>
        <identifier>private.chordy.control</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::D, KeyCode::CONTROL_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::J, KeyCode::K, KeyCode::CONTROL_L</autogen>
      </item>

      <item>
        <name>Command: ER and UI</name>
        <identifier>private.chordy.command1</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::E, KeyCode::R, KeyCode::COMMAND_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::U, KeyCode::I, KeyCode::COMMAND_L</autogen>
      </item>

      <item>
        <name>Command: SD and KL</name>
        <identifier>private.chordy.command2</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::S, KeyCode::D, KeyCode::COMMAND_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::K, KeyCode::L, KeyCode::COMMAND_L</autogen>
      </item>
      
      <item>
        <name>Option: XC and M,</name>
        <identifier>private.chordy.option</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::X, KeyCode::C, KeyCode::OPTION_L</autogen>
        <autogen>__SimultaneousKeyPresses__ KeyCode::M, KeyCode::COMMA, KeyCode::OPTION_L</autogen>
      </item>
      
      <item>
        <name>CMD+CTRL</name>
        <appendix>use R/F or J/I to</appendix>
        <identifier>chordy.cmd_ctrl</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::M, KeyCode::COMMA, KeyCode::OPTION_L</autogen>
      </item>

    </item>
    
  </item>
    
</root>
