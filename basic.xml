<?xml version="1.0"?>

<root>

  <item>
    <name>Move leftmost keys down one step</name>
    
    <item>
      <name>`~  to ESC</name>
      <appendix>Escape key on function row moves one step down</appendix>
      <identifier>private.backquote_to_esc</identifier>
      <autogen>__KeyToKey__  KeyCode::BACKQUOTE, KeyCode::ESCAPE</autogen>
    </item>
    
    <item>
      <name>§± to Esc</name>
      <appendix>Escape key on function row moves one step down (ISO Nordic Layout)</appendix>
      <identifier>private.danish_dollar_to_esc</identifier>
      <autogen>__KeyToKey__  KeyCode::DANISH_DOLLAR, KeyCode::ESCAPE</autogen>
    </item>
    
    <item>
      <name>Tab to `~</name>
      <appendix>Backtick/tilde key moves one step down</appendix>
      <identifier>private.tab_to_backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::BACKQUOTE</autogen>
    </item>
    
    <item>
      <name>Disable Tab</name>
      <appendix>No tab.</appendix>
      <identifier>private.disable_tab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::VK_NONE</autogen>
    </item>
    
    <item>
      <name>F19 to TAB</name>
      <appendix>CapsLock (remapped to F19) to TAB</appendix>
      <identifier>private.f19_to_tab</identifier>
      <autogen>__KeyToKey__ KeyCode::F19, KeyCode::TAB</autogen>
    </item>
    
    <item>
      <name>F19 to Tab and Left Shift</name>
      <appendix>(Press F19 (CapsLock) for Tab. Hold for Left Shift)</appendix>
      <identifier>private.f19_to_tab_and_shift</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F19,
        KeyCode::SHIFT_L | ModifierFlag::NONE,
        KeyCode::TAB
      </autogen>
    </item>
    
  </item>

  <item>
    <name>Basic layout changes</name>
    
    <item>
      <name>ISO keyboard fixes</name>
    </item>

    <item>
      <name>Double Right Shift to Caps Lock</name>
      <appendix>(double tap right shift to enable caps lock</appendix>
      <identifier>private.dbl_shift_to_caps</identifier>
      <autogen>
        __DoublePressModifier__
        KeyCode::SHIFT_R,
        KeyCode::SHIFT_R,
        KeyCode::CAPSLOCK
      </autogen>
    </item>
    
    <item>
      <name>Map _unmodified_ SHIFT to ESCAPE</name>
      <appendix>Since SHIFT_L has moved one step up we are free to use the original SHIFT key for something else...</appendix>
      <identifier>private.shift_to_shift_escape</identifier>
      <autogen>__KeyOverlaidModifier__
      KeyCode::SHIFT_L, ModifierFlag::NONE,
      KeyCode::SHIFT_L, ModifierFlag::NONE,
      KeyCode::ESCAPE
      </autogen>
    </item>
    
    <item>
      <name>F19 to CTRL and Escape</name>
      <identifier>private.f19_to_ctrl_and_esc</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F19,
        KeyCode::CONTROL_L | ModifierFlag::NONE,
        KeyCode::ESCAPE
      </autogen>
    </item>
    
    <item>
      <name>Right CTRL to F16</name>
      <appendix>(use e.g. when remapping Right Ctrl to some other key)</appendix>
      <identifier>private.ctrlr_to_f16</identifier>
      <autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::F16</autogen>
    </item>
    
    <item>
      <name>F16 (Menu/Application Key) to Right Cmd</name>
      <appendix>Use when remapping Right Cmd</appendix>
      <identifier>private.f16_to_cmdr</identifier>
      <autogen>__KeyToKey__ KeyCode::F16, KeyCode::COMMAND_R</autogen>
    </item>
    
    <item>
      <name>Tab to Ctrl</name>
      <appendix>Map Tab key to left control key</appendix>
      <identifier>private.tab_to_ctrl</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::CONTROL_L</autogen>
    </item>
    
    <item>
      <name>Tab to Tab and control</name>
      <appendix>Tab to Tab. Hold tab for Left control)</appendix>
      <identifier>private.tab_to_tab_and_ctrll</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::TAB, ModifierFlag::NONE,
        KeyCode::CONTROL_L,
        KeyCode::TAB
      </autogen>
    </item>
    
    <item>
      <name>Tab to Tab and FN</name>
      <appendix>Tab to Tab. Hold tab for FN)</appendix>
      <identifier>private.tab_to_tab_and_fn</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::TAB,
        KeyCode::FN,
        KeyCode::TAB
      </autogen>
    </item>
    
    <item>
      <name>Enable window switching using OPT-TAB. Use shift to change direction.</name>
      <identifier>private.opttab_for_window_switching</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    
    <item>
      <name>Escape to F16 (change input source)</name>
      <appendix>Escape key becomes F16</appendix>
      <identifier>private.esc_to_F16</identifier>
      <autogen>__KeyToKey__  KeyCode::ESCAPE, KeyCode::F16</autogen>
    </item>
    
    <item>
      <name>Backslash is CTRL and vim mode toggle</name>
      <appendix>(+ When you type BACKSLASH only, toggles Normal Mode)</appendix>
      <identifier>private.vimnormal_toggle_controlR</identifier>
      <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::BACKSLASH,
        KeyCode::CONTROL_R,
        KeyCode::VK_LOCK_ALL_FORCE_OFF,
        KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
        {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
      </autogen>
    </item>
    
    <item>
      <name>Right bracket to Backslash</name>
      <identifier>private.bracketl_to_backslash</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, KeyCode::BACKSLASH</autogen>
    </item>
    
    <item>
      <name>Backslash is BACKSPACE</name>
      <identifier>private.backslash_to_backspace</identifier>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::DELETE</autogen>
    </item>

    <item>
      <name>Period and slash to BACKSPACE and RETURN</name>
      <identifier>private.basic.return_and_backspace</identifier>
      <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::DELETE</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::RETURN</autogen>
    </item>

    <item>
      <name>Swedish characters mapped from keypad</name>
      <identifier>private.basic.swe_keypad</identifier>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::KEYPAD_7, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::KEYPAD_7, ModifierFlag::SHIFT_L | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::KEYPAD_8, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::KEYPAD_8, ModifierFlag::SHIFT_L | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::KEYPAD_9, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::KEYPAD_9, ModifierFlag::SHIFT_L | ModifierFlag::NONE</autogen>
      
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::KEYPAD_7, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::KEYPAD_7, ModifierFlag::SHIFT_R | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::KEYPAD_8, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::KEYPAD_8, ModifierFlag::SHIFT_R | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::KEYPAD_9, ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::KEYPAD_9, ModifierFlag::SHIFT_R | ModifierFlag::NONE</autogen>
    </item>
    
    <item>
      <name>Disable number row and rightmost row (40% prep)</name>
      <identifier>private.basic.40percent.prep</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::1, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::2, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::3, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::4, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::5, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::6, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::7, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::8, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::9, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::0, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::BACKSLASH, KeyCode::VK_NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::RETURN, KeyCode::VK_NONE</autogen>
    </item>

  </item>

</root> 
